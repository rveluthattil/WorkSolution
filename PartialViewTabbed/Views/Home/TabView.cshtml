
@{
    ViewBag.Title = "TabView";
}

<h2>TabView</h2>
@section scripts
{
    <script type="text/javascript" >
        $(function () {
            $("#tabs").tabs();
        });
    </script>
}

<div id="tabs">
    <ul>
        <li><a href="#tabs-1">Transaction</a></li>
        <li><a href="#tabs-2">Logs</a></li>
        <li><a href="#tabs-3">Audit</a></li>
        <li><a href="#tabs-4">Extra</a></li>
    </ul>
    <div id="tabs-1">
        @* Create a single model object and invoke the partial view passing the same *@
        @{ 
            var tranModel = new PartialViewTabbed.Models.TransactionModel
            {
                intTransactionId = 1,
                dtmTransactionDate = DateTime.Now,
                strTransactionName = "Test Transaction"
            };
        }
        @Html.Partial("../Tab1View",@tranModel)
    </div>
    <div id="tabs-2">
        @* Create a collection model object and invoke the partial view passing the same *@
        @{
            List<PartialViewTabbed.Models.LogModel> logModel = 
                new List<PartialViewTabbed.Models.LogModel>();
            for (int ctr = 1; ctr <= 10; ctr++)
            {
                logModel.Add(new PartialViewTabbed.Models.LogModel
                {
                    intLogId = ctr,
                    dtmLogDate = DateTime.Now,
                    strLogName = "Test Log" + ctr.ToString()
                });
            }
        }
        @Html.Partial("../Tab2View",@logModel)
    </div>
    <div id="tabs-3">
        @* Invoke the controller method which will create the relevant model object and pass it to the view 
            and further the view will use the model object and display the contents *@
        @Html.Action("Tab3View", "Home")
    </div>
    <div id="tabs-4">
        @* Display a link in the tab. When you click the link the controller method will be called which 
            will create the model and pass the model to the view and the view will use the model object 
            and display the contents *@
        @Ajax.ActionLink("Click Link to see data", "Tab4View", "Home", new AjaxOptions { UpdateTargetId = "tabs4data" })
        <div id="tabs4data"></div>
    </div>
</div>


